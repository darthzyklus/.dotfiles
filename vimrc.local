set noswapfile

"relative number
augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave * set number relativenumber
  autocmd BufLeave,FocusLost,InsertEnter   * set nonumber norelativenumber
augroup END

"Cursor line
augroup cursorlinetoogle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave * set cursorline
  autocmd BufLeave,FocusLost,InsertEnter   * set nocursorline
augroup END


" Open new split panes to right and bottom
set splitbelow
set splitright


" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

"Move current line to another
nnoremap <S-C-j> :m .+1<CR>==
nnoremap <S-C-k> :m .-2<CR>==
inoremap <S-C-j> <Esc>:m .+1<CR>==gi
inoremap <S-C-k> <Esc>:m .-2<CR>==gi
vnoremap <S-C-j> :m '>+1<CR>gv=gv
vnoremap <S-C-k> :m '<-2<CR>gv=gv

"configure indent
autocmd VimEnter * set autoindent smartindent


"" set the cursor style
if has("autocmd")
  au VimEnter,InsertLeave * silent execute '!echo -ne "\e[2 q"' | redraw!
  au InsertEnter,InsertChange *
    \ if v:insertmode == 'i' |
    \   silent execute '!echo -ne "\e[6 q"' | redraw! |
    \ elseif v:insertmode == 'r' |
    \   silent execute '!echo -ne "\e[4 q"' | redraw! |
    \ endif
  au VimLeave * silent execute '!echo -ne "\e[ q"' | redraw!
endif



"" emmet leader key 
let g:user_emmet_leader_key=','

"" autosave
nmap <c-s> :w<CR>
vmap <c-s> <Esc><c-s>gv
imap <c-s> <Esc><c-s>

set noerrorbells visualbell t_vb=
if has('autocmd')
  autocmd GUIEnter * set visualbell t_vb=
endif
